server:
  port: 8080
  error:
    include-message: always

spring:
  boot:
    admin:
      client:
        enabled: true
        instance:
          service-url: http://microservice-streaming:8080

  liquibase:
    enabled: false
    drop-first: false
    change-log: classpath:database-streaming-changelog.xml

  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost:29092}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false
      acks: 1

  datasource:
    url: jdbc:${DATABASE_URL:postgresql://localhost:5432/skillbox}
    username: ${USER_DB:post-service}
    password: ${PASS_DB:post-service}
    driverClassName: org.postgresql.Driver

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        format_sql: true
#        default_schema: streaming
    open-in-view: false

kafka-topics:
  topic_test: topic_test

kafka-groupId: microservice-streaming
kafka-concurrency: 5
kafka-pollTimeout: 2000
acks-timeout-mseconds: 2000
pong_interval: 10000
socket_path: ${SOCKET_PATH:api/v1/streaming/ws}